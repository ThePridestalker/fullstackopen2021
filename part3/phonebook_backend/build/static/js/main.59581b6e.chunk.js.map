{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","onChange","type","Filter","handleFilterChange","Notification","message","msgType","className","baseUrl","personsService","getAll","axios","get","then","response","data","create","newObject","post","update","put","remove","delete","App","useState","setPersons","personsToCompare","setPersonsToCompare","setNewName","setNewNumber","setMessage","setMsgType","useEffect","personService","initialPersons","event","regex","RegExp","target","filteredPersons","filter","match","preventDefault","personExists","length","window","confirm","updatedPerson","returnedPerson","setTimeout","newPerson","concat","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59581b6e.chunk.js","sourcesContent":["const Person = ({ persons, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      {persons.map((person) => (\r\n        <div key={person.id}>\r\n          {person.name} {person.number}{' '}\r\n          <button onClick={deletePerson(person.id, person.name)}>delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","const PersonForm = ({\r\n  addPerson,\r\n  newName,\r\n  newNumber,\r\n  handleNameChange,\r\n  handleNumberChange,\r\n}) => {\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","const Filter = ({ handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","const Notification = ({ message, msgType }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (msgType === 'success') {\r\n    return <div className=\"success\">{message}</div>\r\n  } else {\r\n    return <div className=\"error\">{message}</div>\r\n  }\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then((response) => response.data)\r\n}\r\n\r\nconst personsService = {\r\n  getAll,\r\n  create,\r\n  update,\r\n  remove,\r\n}\r\n\r\nexport default personsService\r\n","import React, { useEffect, useState } from 'react'\r\nimport Person from './components/Person'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [personsToCompare, setPersonsToCompare] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [msgType, setMsgType] = useState('')\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((initialPersons) => {\r\n      setPersonsToCompare(initialPersons)\r\n      setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPersons(personsToCompare)\r\n  }, [personsToCompare])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    const personExists = persons.filter((person) => person.name === newName)\r\n\r\n    if (personExists.length > 0) {\r\n      const updateOrder = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one ?`\r\n      )\r\n      if (updateOrder) {\r\n        const updatedPerson = {\r\n          ...personExists[0],\r\n          number: newNumber,\r\n        }\r\n        personService\r\n          .update(updatedPerson.id, updatedPerson)\r\n          .then((returnedPerson) => {\r\n            setPersonsToCompare(\r\n              personsToCompare.map((person) =>\r\n                person.id !== returnedPerson.id ? person : returnedPerson\r\n              )\r\n            )\r\n\r\n            setMessage(`Changed ${returnedPerson.name} number`)\r\n            setMsgType('success')\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n      }\r\n    } else {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n      }\r\n      personService.create(newPerson).then((returnedPerson) => {\r\n        setPersonsToCompare(personsToCompare.concat(returnedPerson))\r\n\r\n        setMessage(`Added ${newPerson.name}`)\r\n        setMsgType('success')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (id, name) => () => {\r\n    const deleteOrder = window.confirm(`Delete ${name}?`)\r\n    if (deleteOrder) {\r\n      personService\r\n        .remove(id)\r\n        .then(() => {\r\n          setPersonsToCompare(\r\n            personsToCompare.filter((person) => person.id !== id)\r\n          )\r\n        })\r\n        .catch(() => {\r\n          setMessage(\r\n            `Information of ${name} has already been removed from the server`\r\n          )\r\n          setMsgType('error')\r\n\r\n          setPersonsToCompare(\r\n            personsToCompare.filter((person) => person.id !== id)\r\n          )\r\n\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n          }, 5000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    // regex case insensitive\r\n    const regex = new RegExp(event.target.value, 'i')\r\n    const filteredPersons = personsToCompare.filter((person) =>\r\n      person.name.match(regex)\r\n    )\r\n    setPersons(filteredPersons)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} msgType={msgType} />\r\n      <Filter handleFilterChange={handleFilterChange} />\r\n      <h2>Add a new person</h2>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Person persons={persons} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}